service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function uid() { return request.auth.uid; }
    function isSuperAdmin() {
      return isSignedIn() && (
        request.auth.token.role == 'superadmin' ||
        get(/databases/$(database)/documents/users/$(uid())).data.role == 'superadmin'
      );
    }
    function isAssistant() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(uid())).data.role == 'assistant';
    }
    function isManager() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(uid())).data.role == 'manager';
    }
    function _workerPerms(pathUserId) {
      return get(/databases/$(database)/documents/users/$(pathUserId)/worker/permissions).data;
    }
    function canOnboardTenants() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(uid())/worker/permissions)
        && _workerPerms(uid()).canOnboardTenants == true;
    }
    function canToggleFeatures() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(uid())/worker/permissions)
        && _workerPerms(uid()).canToggleFeatures == true;
    }
    function canReadFinancials() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(uid())/worker/permissions)
        && _workerPerms(uid()).canReadFinancials == true;
    }
    function canWriteContent() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(uid())/worker/permissions)
        && _workerPerms(uid()).canWriteContent == true;
    }
    function isMember(churchId) {
      return isSignedIn()
        && exists(/databases/$(database)/documents/churches/$(churchId)/memberships/$(uid()));
    }
    function hasRole(churchId, role) {
      return isMember(churchId)
        && get(/databases/$(database)/documents/churches/$(churchId)/memberships/$(uid())).data.role == role;
    }

    match /churches/{churchId} {
      allow read: if true;
      allow write: if isSuperAdmin()
        || (
          canWriteContent()
          && (resource == null || request.resource.data.diff(resource.data).changedKeys().hasOnly([
            'name','description','iconUrl','bannerUrl','brandColor','city','address','phone','email','website'
          ]))
        )
        || (
          canOnboardTenants()
          && (resource == null || request.resource.data.diff(resource.data).changedKeys().hasOnly([
            'onboardingStatus','activatedAt'
          ]))
        );

      match /memberships/{userId} {
        allow read: if isMember(churchId) || isSuperAdmin() || isAssistant() || isManager();
        allow write: if uid() == userId
          || hasRole(churchId, 'admin')
          || isSuperAdmin()
          || (isManager() && canOnboardTenants());
      }

      match /tenant_settings/{docId} {
        allow read: if true;
        allow write: if hasRole(churchId, 'admin') || isSuperAdmin() || canToggleFeatures();
      }

      match /invites/{inviteId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canOnboardTenants()
          || canWriteContent();
      }

      match /sermons/{docId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
      }

      match /events/{docId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
        allow update: if isMember(churchId)
          && (resource != null)
          && request.resource.data.diff(resource.data).changedKeys().hasOnly(['attendees']);
      }

      match /announcements/{docId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
      }

      match /news/{docId} {
        allow read: if (resource != null && resource.data.status == 'published')
          || hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
      }

      match /reports/{docId} {
        allow read: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent()
          || (isMember(churchId) && request.auth.uid == resource.data.createdBy)
          || (hasRole(churchId, 'boardLeader') && resource.data.visibility == 'board')
          || (hasRole(churchId, 'bishop') && resource.data.visibility == 'bishop' && resource.data.assignedLeaderChurchId == churchId);
        allow create: if hasRole(churchId, 'admin')
          || hasRole(churchId, 'pastor')
          || isSuperAdmin()
          || canWriteContent();
        allow update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
      }

      match /payments/{docId} {
        allow read: if uid() == resource.data.userId
          || hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canReadFinancials();
        allow create: if (isMember(churchId) && uid() == request.resource.data.userId)
          || isSuperAdmin();
        allow update: if (uid() == resource.data.userId
          && request.resource.data.diff(resource.data).changedKeys().hasOnly(['status','updatedAt']))
          || isSuperAdmin()
          || canReadFinancials();
        allow delete: if false;
      }

      match /contribution_pools/{docId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
      }

      match /meetings/{meetingId} {
        allow read: if isMember(churchId);
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
        match /attendees/{uid} {
          allow read: if isMember(churchId);
          allow write: if (isMember(churchId) && request.auth.uid == uid)
            || isSuperAdmin();
        }
      }

      match /tithes/{docId} {
        allow read: if uid() == resource.data.userId
          || hasRole(churchId, 'pastor')
          || hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canReadFinancials();
        allow create, update: if uid() == request.resource.data.userId
          || hasRole(churchId, 'pastor')
          || hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
        allow delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /threads/{threadId} {
        allow read: if isMember(churchId);
        allow create: if isMember(churchId) || isSuperAdmin();
        allow update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
        match /messages/{messageId} {
          allow read: if isMember(churchId);
          allow create: if (isMember(churchId) && uid() == request.resource.data.userId)
            || isSuperAdmin();
          allow update, delete: if hasRole(churchId, 'admin')
            || isSuperAdmin()
            || uid() == resource.data.userId
            || canWriteContent();
        }
      }

      match /games_scores/{scoreId} {
        allow read: if true;
        allow create: if isMember(churchId) && uid() == request.resource.data.userId;
        allow update, delete: if false;
      }

      match /service_issues/{docId} {
        allow read: if isMember(churchId) || isSuperAdmin() || canWriteContent();
        allow create: if isMember(churchId) || isSuperAdmin();
        allow update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
        match /audit/{auditId} {
          allow read: if hasRole(churchId, 'admin')
            || isSuperAdmin()
            || canWriteContent();
          allow write: if isSuperAdmin();
        }
      }

      match /testimonies/{docId} {
        allow read: if (resource != null && resource.data.status == 'approved')
          || hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
        allow create: if isMember(churchId);
        allow update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
      }

      match /prayers/{docId} {
        allow read: if isMember(churchId);
        allow create: if isMember(churchId) || isSuperAdmin();
        allow update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || (uid() == resource.data.userId)
          || canWriteContent();
      }

      match /carpark/{docId} {
        allow read: if isMember(churchId);
        allow create, update, delete: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canWriteContent();
      }

      match /tenant_billing/{docId} {
        allow read: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canReadFinancials();
        allow write: if hasRole(churchId, 'admin') || isSuperAdmin();
      }
      match /tenant_usage/{docId} {
        allow read: if hasRole(churchId, 'admin')
          || isSuperAdmin()
          || canReadFinancials();
        allow write: if hasRole(churchId, 'admin') || isSuperAdmin();
      }
    }

    // ...global and user-level matches remain unchanged, apply similar cleaning as above...
  }
}
