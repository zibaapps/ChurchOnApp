rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function uid() { return request.auth.uid; }
    function isSuperAdmin() {
      return isSignedIn() && (
        request.auth.token.role == 'superadmin' ||
        get(/databases/$(database)/documents/users/$(uid())).data.role == 'superAdmin'
      );
    }

    // Membership-based access
    function isMember(churchId) {
      return isSignedIn() && exists(/databases/$(database)/documents/churches/$(churchId)/memberships/$(uid()));
    }

    function hasRole(churchId, role) {
      return isMember(churchId) && get(/databases/$(database)/documents/churches/$(churchId)/memberships/$(uid())).data.role == role;
    }

    // Churches collection
    match /churches/{churchId} {
      allow read: if true; // public metadata
      allow write: if isSuperAdmin();

      // Subcollections
      match /memberships/{userId} {
        allow read: if isMember(churchId) || isSuperAdmin();
        allow write: if uid() == userId || hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /tenant_settings/{docId} {
        allow read: if true;
        allow write: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /invites/{inviteId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /sermons/{docId} {
        allow read: if true; // public read of sermons
        allow create, update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /events/{docId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
        // RSVP field updates allowed to members on the attendees map
        allow update: if isMember(churchId) && request.resource.data.diff(resource.data).changedKeys().hasOnly(['attendees']);
      }

      match /announcements/{docId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /news/{docId} {
        allow read: if resource.data.status == 'published' || hasRole(churchId, 'admin') || isSuperAdmin();
        allow create, update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /reports/{docId} {
        // Authors and admins can read; pastors create pastor reports; board leaders see board; bishops see pastor reports assigned to them
        allow read: if
          hasRole(churchId, 'admin') ||
          isSuperAdmin() ||
          (isMember(churchId) && request.auth.uid == resource.data.createdBy) ||
          (hasRole(churchId, 'boardLeader') && resource.data.visibility == 'board') ||
          (hasRole(churchId, 'bishop') && resource.data.visibility == 'bishop' && resource.data.assignedLeaderChurchId == churchId);

        allow create: if
          hasRole(churchId, 'admin') ||
          hasRole(churchId, 'pastor') ||
          isSuperAdmin();

        allow update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /payments/{docId} {
        allow read: if uid() == resource.data.userId || hasRole(churchId, 'admin') || isSuperAdmin();
        allow create: if isMember(churchId) && uid() == request.resource.data.userId;
        // Allow client to update only status/updatedAt fields on own document; full updates reserved for server
        allow update: if (
          uid() == resource.data.userId && request.resource.data.diff(resource.data).changedKeys().hasOnly(['status','updatedAt'])
        ) || isSuperAdmin();
        allow delete: if false;
      }

      match /contribution_pools/{docId} {
        allow read: if true;
        allow create, update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /tithes/{docId} {
        allow read: if uid() == resource.data.userId || hasRole(churchId, 'pastor') || hasRole(churchId, 'admin') || isSuperAdmin();
        allow create, update: if uid() == request.resource.data.userId || hasRole(churchId, 'pastor') || hasRole(churchId, 'admin') || isSuperAdmin();
        allow delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      // Chat threads & messages
      match /chat_threads/{threadId} {
        allow read: if isMember(churchId);
        allow create: if isMember(churchId);
        allow update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
        match /messages/{messageId} {
          allow read: if isMember(churchId);
          allow create: if isMember(churchId) && uid() == request.resource.data.userId;
          allow update, delete: if hasRole(churchId, 'admin') || isSuperAdmin() || uid() == resource.data.userId;
        }
      }

      // Per-church game scores
      match /games_scores/{scoreId} {
        allow read: if true;
        allow create: if isMember(churchId) && uid() == request.resource.data.userId;
        allow update, delete: if false;
      }

      match /service_issues/{docId} {
        allow read: if isMember(churchId) || isSuperAdmin();
        allow create: if isMember(churchId);
        allow update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
        match /audit/{auditId} {
          allow read: if hasRole(churchId, 'admin') || isSuperAdmin();
          allow write: if isSuperAdmin(); // written by server/admin SDK only
        }
      }

      match /testimonies/{docId} {
        allow read: if resource.data.status == 'approved' || hasRole(churchId, 'admin') || isSuperAdmin();
        allow create: if isMember(churchId);
        allow update, delete: if hasRole(churchId, 'admin') || isSuperAdmin();
      }

      match /prayers/{docId} {
        allow read: if isMember(churchId);
        allow create: if isMember(churchId);
        allow update, delete: if hasRole(churchId, 'admin') || isSuperAdmin() || (uid() == resource.data.userId);
      }
    }

    // Global games leaderboard only stores opt-in submissions
    match /global_games_scores/{scoreId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if false;
    }

    // Interchurch Activities (leadChurchId field controls admin)
    match /interchurch_activities/{activityId} {
      allow read: if true; // public listings; app filters visibility
      allow create, update, delete: if isSuperAdmin() || (isSignedIn() && hasRole(request.resource.data.leadChurchId, 'admin'));
      match /{sub=**} {
        allow read: if isSignedIn();
        allow write: if isSuperAdmin() || (isSignedIn() && hasRole(resource.data.leadChurchId, 'admin'));
      }
    }

    // Year Program Entries (churchId field controls ownership)
    match /year_program_entries/{entryId} {
      allow read: if true;
      allow create, update, delete: if isSuperAdmin() || (isSignedIn() && hasRole(request.resource.data.churchId, 'admin'));
    }

    // Domain mapping for web
    match /domains/{host} {
      allow read: if true; // public mapping host -> churchId
      allow write: if isSuperAdmin();
    }

    // Superadmin ads and content
    match /superadmin_ads/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Superadmin ledger
    match /superadmin_ledger/{docId} {
      allow read, write: if isSuperAdmin();
    }
  }
}